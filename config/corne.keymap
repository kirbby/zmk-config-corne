/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <6>; };

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };

&lt { flavor = "hold-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        ESC_JK {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        UE {
            bindings = <&kp DE_U_UMLAUT>;
            key-positions = <3 7>;
        };

        AE {
            bindings = <&kp DE_A_UMLAUT>;
            key-positions = <13 3>;
        };

        OE {
            bindings = <&kp DE_O_UMLAUT>;
            key-positions = <3 9>;
        };

        SS {
            bindings = <&kp DE_SZ>;
            key-positions = <14 21>;
        };

        Tab_DF {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };

        GUI_Left {
            bindings = <&kp LEFT_GUI>;
            key-positions = <14 15 16>;
        };

        ESC_Left {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15>;
        };
    };

    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RIGHT_ALT &kp E>;
            label = "EURO";
        };

        shift_win: shift_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LSHIFT &kp LEFT_WIN>;

            label = "SHIFT_WIN";
        };

        kill_node: kill_node {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT &sk LCTRL &sk LEFT_ALT &kp C>;
            label = "KILL_NODE";
        };

        alt_F1: find_file_in_explorer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LALT &kp F1>;
            label = "FIND_FILE_IN_EXPLORER";
        };

        alt_F4: alt_F4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp F4>;
            label = "ALT_F4";
        };
    };

    behaviors {
        shift_triple_capslock: shift_triple_capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_TRIPLE_CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&kp LSHIFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TAB               &kp Q     &kp W  &kp E      &kp R      &kp T          &kp DE_Z         &kp U                   &kp I         &kp O       &kp DE_O_UMLAUT  &kp DEL
&mt LEFT_ALT LA(TAB)  &kp A     &kp S  &kp D      &kp F      &kp G          &kp H            &kp J                   &kp K         &kp L       &kp P            &kp RIGHT_ALT
&kp LEFT_SHIFT        &kp DE_Y  &kp X  &kp C      &kp V      &kp B          &kp N            &kp M                   &kp COMMA     &kp PERIOD  &kp DE_MINUS     &kp RIGHT_WIN
                                       &kp LCTRL  &kp SPACE  &lt 3 ENTER    &lt 2 BACKSPACE  &shift_triple_capslock  &kp LEFT_ALT
            >;
        };

        Homerowmods {
            bindings = <
&kp TAB         &kp Q  &kp W           &kp E           &kp R        &kp T          &kp Y            &kp U        &kp I           &kp O            &kp P          &kp DEL
&kp LEFT_ALT    &kp A  &mt LEFT_GUI A  &mt LEFT_ALT D  &mt LCTRL F  &kp G          &kp H            &mt RCTRL J  &mt LEFT_ALT K  &mt RIGHT_GUI L  &kp SEMICOLON  &kp RIGHT_ALT
&kp LEFT_SHIFT  &kp Z  &kp X           &kp C           &kp V        &kp B          &kp N            &kp M        &kp COMMA       &kp PERIOD       &kp SLASH      &kp RIGHT_WIN
                                       &kp LCTRL       &kp SPACE    &lt 3 ENTER    &lt 2 BACKSPACE  &kp RSHFT    &kp LEFT_ALT
            >;
        };

        Symbols {
            bindings = <
&kp DE_CARET  &euro      &kp DE_LESS_THAN         &kp DE_GREATER_THAN       &kp DE_EXCLAMATION  &kp DE_PERCENT    &kp DE_GRAVE          &kp DE_QUESTION      &kp DE_LEFT_BRACKET  &kp DE_RIGHT_BRACKET  &none         &none
&none         &kp DE_AT  &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_EQUAL        &kp DE_PIPE       &kp DE_AMPERSAND      &kp DE_PLUS          &kp DE_LEFT_BRACE    &kp DE_RIGHT_BRACE    &kp DE_MINUS  &none
&none         &none      &kp DE_BACKSLASH         &kp DE_SLASH              &kp DE_ASTERISK     &kp DE_DOLLAR     &kp DE_DOUBLE_QUOTES  &kp DE_SINGLE_QUOTE  &kp DE_TILDE         &none                 &none         &none
                                                  &trans                    &trans              &trans            &trans                &trans               &trans
            >;
        };

        Numbers {
            bindings = <
&kp F2      &kp F10  &kp F11   &kp UP    &kp F3      &kp F12    &kp HOME  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none         &kp PRINTSCREEN
&alt_F4     &kp F5   &kp LEFT  &kp DOWN  &kp RIGHT   &kp F6     &kp END   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none         &none
&kill_node  &none    &none     &alt_F1   &kp DELETE  &kp F8     &kp N0    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_COMMA  &kp RSHIFT
                               &trans    &shift_win  &trans     &trans    &kp LCTRL     &kp NUMBER_0
            >;
        };

        Settings {
            bindings = <
&none              &none  &bl BL_DEC       &bl BL_INC       &bl BL_TOG       &none    &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none  &none  &none
&ext_power EP_OFF  &none  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG  &none    &kp C_BRIGHTNESS_DEC  &bt BT_NXT         &bt BT_PRV       &to 0  &to 1  &none
&ext_power EP_ON   &none  &none            &none            &none            &none    &none                 &none              &none            &none  &none  &bt BT_CLR
                                           &none            &none            &none    &none                 &none              &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Func_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
