/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <6>; };

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };

/ {
    combos {
        compatible = "zmk,combos";

        ESC_JK {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        UE {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 7>;
        };

        AE {
            bindings = <&kp SQT>;
            key-positions = <13 3>;
        };

        OE {
            bindings = <&kp SEMICOLON>;
            key-positions = <3 22>;
        };

        SS {
            bindings = <&kp MINUS>;
            key-positions = <14 21>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp C>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp V>;
            label = "PASTE";
        };

        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RIGHT_ALT &kp E>;
            label = "EURO";
        };

        shift_win: shift_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp LEFT_WIN>;
            label = "SHIFT_WIN";
        };

        ctrl_q: ctrl_q {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp Q>;
            label = "CTRL_Q";
        };

        ctrl_a: ctrl_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp A>;
            label = "CTRL_A";
        };

        ctrl_s: ctrl_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp S>;
            label = "CTRL_S";
        };

        kill_node: kill_node {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp LCTRL &kp LEFT_ALT &kp C>;
            label = "KILL_NODE";
        };

        find_file_in_explorer: find_file_in_explorer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp F1>;
            label = "FIND_FILE_IN_EXPLORER";
        };

        ctrl_r: ctrl_r {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp R>;
            label = "CTRL_R";
        };

        ctrl_shift_r: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LSHIFT &kp R>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        shift_triple_capslock: shift_triple_capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_TRIPLE_CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&kp LSHIFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E      &kp R      &kp T          &kp Y            &kp U                   &kp I         &kp O       &kp P          &kp DEL
&kp LEFT_ALT    &kp A  &kp S  &kp D      &kp F      &kp G          &kp H            &kp J                   &kp K         &kp L       &kp SEMICOLON  &kp RIGHT_ALT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V      &kp B          &kp N            &kp M                   &kp COMMA     &kp PERIOD  &kp SLASH      &kp RIGHT_WIN
                              &kp LCTRL  &kp SPACE  &lt 3 ENTER    &lt 2 BACKSPACE  &shift_triple_capslock  &kp LEFT_ALT
            >;
        };

        Homerowmods {
            bindings = <
&kp TAB         &kp Q  &kp W           &kp E           &kp R        &kp T          &kp Y            &kp U        &kp I           &kp O            &kp P          &kp DEL
&kp LEFT_ALT    &kp A  &mt LEFT_GUI A  &mt LEFT_ALT D  &mt LCTRL F  &kp G          &kp H            &mt RCTRL J  &mt LEFT_ALT K  &mt RIGHT_GUI L  &kp SEMICOLON  &kp RIGHT_ALT
&kp LEFT_SHIFT  &kp Z  &kp X           &kp C           &kp V        &kp B          &kp N            &kp M        &kp COMMA       &kp PERIOD       &kp SLASH      &kp RIGHT_WIN
                                       &kp LCTRL       &kp SPACE    &lt 3 ENTER    &lt 2 BACKSPACE  &kp RSHFT    &kp LEFT_ALT
            >;
        };

        Symbols {
            bindings = <
&kp CARET  &euro        &kp LESS_THAN         &kp GREATER_THAN       &kp EXCLAMATION  &kp PERCENT    &kp GRAVE  &kp AMPERSAND      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &none
&none      &kp AT_SIGN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL        &kp PIPE       &kp SQT    &kp PLUS           &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp MINUS              &none
&none      &none        &kp BACKSLASH         &kp SLASH              &kp ASTERISK     &kp DOLLAR     &kp PIPE   &kp DOUBLE_QUOTES  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE         &kp TILDE
                                              &none                  &trans           &trans         &trans     &trans             &none
            >;
        };

        Numbers {
            bindings = <
&none  &kp F2  &kp F10   &kp UP    &kp F11     &kp F12    &kp HOME  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none         &kp PRINTSCREEN
&none  &kp F3  &kp LEFT  &kp DOWN  &kp RIGHT   &kp F6     &kp END   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none         &none
&none  &none   &none     &copy     &paste      &kp F8     &kp N0    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_COMMA  &kp RSHIFT
                         &none     &shift_win  &trans     &trans    &kp LCTRL     &none
            >;
        };

        Settings {
            bindings = <
&none             &none  &bl BL_DEC       &bl BL_INC       &bl BL_TOG       &none    &none  &none       &none       &none  &none  &none
&none             &none  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG  &none    &none  &bt BT_NXT  &bt BT_PRV  &to 0  &to 1  &none
&ext_power EP_ON  &none  &none            &none            &none            &none    &none  &none       &none       &none  &none  &bt BT_CLR
                                          &none            &none            &none    &none  &none       &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Func_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
